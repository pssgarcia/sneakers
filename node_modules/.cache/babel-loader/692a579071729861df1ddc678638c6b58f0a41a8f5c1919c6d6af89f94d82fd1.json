{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contact\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Mail:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"message\"\n}, \"Message:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"contact-form\",\n    onSubmit: _cache[3] || (_cache[3] = (...args) => _ctx.submitForm && _ctx.submitForm(...args))\n  }, [_createElementVNode(\"aside\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userObj.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userObj.name, void 0, {\n    lazy: true\n  }]])]), _createElementVNode(\"aside\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userObj.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userObj.email, void 0, {\n    lazy: true\n  }]])]), _createElementVNode(\"aside\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"message\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.userObj.message = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userObj.message, void 0, {\n    lazy: true\n  }]])]), _hoisted_5], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","onSubmit","_cache","args","_ctx","submitForm","_hoisted_2","id","$data","userObj","name","$event","required","_hoisted_3","email","_hoisted_4","message","_hoisted_5"],"sources":["/Users/aya_iida/Documents/Tamwood/sneakers/src/components/pages/ContactPage.vue"],"sourcesContent":["<template>\n    <section class=\"contact\">\n        <form class=\"contact-form\" @submit=\"submitForm\">\n            <aside>\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" v-model.lazy=\"userObj.name\" required>\n            </aside>\n            <aside>\n                <label for=\"email\">Mail:</label>\n                <input type=\"email\" id=\"email\" v-model.lazy=\"userObj.email\" required>\n            </aside>\n            <aside>\n                <label for=\"message\">Message:</label>\n                <textarea id=\"message\" v-model.lazy=\"userObj.message\" required></textarea>\n            </aside>\n            <button type=\"submit\">Submit</button>\n        </form>\n    </section>\n</template>\n\n<script>\n\nexport default {\n    name:\"ContactPage\",\n data() {\n    return {\n      userObj:{\n        name:\"\",\n        email:\"\",\n        message:\"\"\n      }\n    };\n  },\n   methods: {\n    \n    // submitForm() {\n    //   // フォームデータをサーバーに送信する処理\n    //   // この例では、POSTリクエストを使用してPHPスクリプトにデータを送信します\n\n    //   const url = '';\n    //   // PHPスクリプトへのパスを設定する\n\n    //   // フォームデータをPOSTリクエストのボディに変換\n    //   const formData = new FormData();\n    //   formData.append('name', this.formData.name);\n    //   formData.append('email', this.formData.email);\n    //   formData.append('message', this.formData.message);\n\n    //   // POSTリクエストを送信\n    //   fetch(url, {\n    //     method: 'POST',\n    //     body: formData\n    //   })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     // レスポンスを処理するためのコード\n    //     console.log(data);\n    //     // 成功メッセージを表示など、適宜処理を追加してください\n    //   })\n    //   .catch(error => {\n    //     // エラーハンドリング\n    //     console.error(error);\n    //   });\n    // }\n  }\n};\n</script>\n"],"mappings":";;EACaA,KAAK,EAAC;AAAS;gCAGZC,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gCAIvBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAIxBD,mBAAA,CAAqC;EAA9BC,GAAG,EAAC;AAAS,GAAC,UAAQ;gCAGjCD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAdpCC,mBAAA,CAgBU,WAhBVC,UAgBU,GAfNJ,mBAAA,CAcO;IAdDD,KAAK,EAAC,cAAc;IAAEM,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC1CP,mBAAA,CAGQ,gBAFJU,UAA+B,E,gBAC/BV,mBAAA,CAAkE;IAA3DE,IAAI,EAAC,MAAM;IAACS,EAAE,EAAC,MAAM;+DAAeC,KAAA,CAAAC,OAAO,CAACC,IAAI,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAdJ,KAAA,CAAAC,OAAO,CAACC,IAAI,E;UAA1B;EAA2B,E,MAE5Dd,mBAAA,CAGQ,gBAFJiB,UAAgC,E,gBAChCjB,mBAAA,CAAqE;IAA9DE,IAAI,EAAC,OAAO;IAACS,EAAE,EAAC,OAAO;+DAAeC,KAAA,CAAAC,OAAO,CAACK,KAAK,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAAfJ,KAAA,CAAAC,OAAO,CAACK,KAAK,E;UAA3B;EAA4B,E,MAE/DlB,mBAAA,CAGQ,gBAFJmB,UAAqC,E,gBACrCnB,mBAAA,CAA0E;IAAhEW,EAAE,EAAC,SAAS;+DAAeC,KAAA,CAAAC,OAAO,CAACO,OAAO,GAAAL,MAAA;IAAEC,QAAQ,EAAR;iDAAjBJ,KAAA,CAAAC,OAAO,CAACO,OAAO,E;UAA7B;EAA8B,E,MAEzDC,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}