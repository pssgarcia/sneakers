{"ast":null,"code":"export default {\n  name: \"ContactPage\",\n  data() {\n    return {\n      userObj: {\n        name: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n  },\n  methods: {\n    async postUsers() {\n      try {\n        await fetch({\n          method: \"POST\",\n          body: JSON.stringify(this.userObj)\n        }).then(response => response.text()).then(data => {\n          console.log(data);\n        });\n      } catch (error) {\n        console.log;\n      }\n    }\n    // submitForm() {\n    //   // フォームデータをサーバーに送信する処理\n    //   // この例では、POSTリクエストを使用してPHPスクリプトにデータを送信します\n\n    //   const url = '';\n    //   // PHPスクリプトへのパスを設定する\n\n    //   // フォームデータをPOSTリクエストのボディに変換\n    //   const formData = new FormData();\n    //   formData.append('name', this.formData.name);\n    //   formData.append('email', this.formData.email);\n    //   formData.append('message', this.formData.message);\n\n    //   // POSTリクエストを送信\n    //   fetch(url, {\n    //     method: 'POST',\n    //     body: formData\n    //   })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     // レスポンスを処理するためのコード\n    //     console.log(data);\n    //     // 成功メッセージを表示など、適宜処理を追加してください\n    //   })\n    //   .catch(error => {\n    //     // エラーハンドリング\n    //     console.error(error);\n    //   });\n    // }\n  }\n};","map":{"version":3,"names":["name","data","userObj","email","message","methods","postUsers","fetch","method","body","JSON","stringify","then","response","text","console","log","error"],"sources":["/Users/aya_iida/Documents/Tamwood/sneakers/src/components/pages/ContactPage.vue"],"sourcesContent":["<template>\n    <section class=\"contact\">\n        <form class=\"contact-form\" @submit=\"submitForm\">\n            <aside>\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" v-model.lazy=\"userObj.name\" required>\n            </aside>\n            <aside>\n                <label for=\"email\">Mail:</label>\n                <input type=\"email\" id=\"email\" v-model.lazy=\"userObj.email\" required>\n            </aside>\n            <aside>\n                <label for=\"message\">Message:</label>\n                <textarea id=\"message\" v-model.lazy=\"userObj.message\" required></textarea>\n            </aside>\n            <button type=\"submit\">Submit</button>\n        </form>\n    </section>\n</template>\n\n<script>\n\nexport default {\n    name:\"ContactPage\",\n data() {\n    return {\n      userObj:{\n        name:\"\",\n        email:\"\",\n        message:\"\"\n      }\n    };\n  },\n   methods: {\n    async postUsers(){\n      try{\n        await fetch(\n          {\n            method:\"POST\",\n            body: JSON.stringify(this.userObj)\n          }\n        ).then((response)=>response.text()\n        ).then((data)=>{\n          console.log(data)\n        });\n      }catch(error){\n        console.log\n    }\n\n    }\n    // submitForm() {\n    //   // フォームデータをサーバーに送信する処理\n    //   // この例では、POSTリクエストを使用してPHPスクリプトにデータを送信します\n\n    //   const url = '';\n    //   // PHPスクリプトへのパスを設定する\n\n    //   // フォームデータをPOSTリクエストのボディに変換\n    //   const formData = new FormData();\n    //   formData.append('name', this.formData.name);\n    //   formData.append('email', this.formData.email);\n    //   formData.append('message', this.formData.message);\n\n    //   // POSTリクエストを送信\n    //   fetch(url, {\n    //     method: 'POST',\n    //     body: formData\n    //   })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     // レスポンスを処理するためのコード\n    //     console.log(data);\n    //     // 成功メッセージを表示など、適宜処理を追加してください\n    //   })\n    //   .catch(error => {\n    //     // エラーハンドリング\n    //     console.error(error);\n    //   });\n    // }\n  }\n};\n</script>\n"],"mappings":"AAsBA,eAAe;EACXA,IAAI,EAAC,aAAa;EACrBC,IAAIA,CAAA,EAAG;IACJ,OAAO;MACLC,OAAO,EAAC;QACNF,IAAI,EAAC,EAAE;QACPG,KAAK,EAAC,EAAE;QACRC,OAAO,EAAC;MACV;IACF,CAAC;EACH,CAAC;EACAC,OAAO,EAAE;IACR,MAAMC,SAASA,CAAA,EAAE;MACf,IAAG;QACD,MAAMC,KAAK,CACT;UACEC,MAAM,EAAC,MAAM;UACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACT,OAAO;QACnC,CACF,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC,CACjC,CAAC,CAACF,IAAI,CAAEX,IAAI,IAAG;UACbc,OAAO,CAACC,GAAG,CAACf,IAAI;QAClB,CAAC,CAAC;MACJ,CAAC,QAAMgB,KAAK,EAAC;QACXF,OAAO,CAACC,GAAE;MACd;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}